AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  ReceiptProcessor

Globals:
  Function:
    Timeout: 900

Resources:

  ReceiptsBucket:
    Type: AWS::S3::Bucket
#    Properties:
#      BucketName: receipts
#      AccessControl: Private

  ReceiptsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: receipts
      AttributeDefinitions:
        - AttributeName: model_id
          AttributeType: S
        - AttributeName: file_name
          AttributeType: S
      KeySchema:
        - AttributeName: model_id
          KeyType: HASH  # Partition key
        - AttributeName: file_name
          KeyType: RANGE  # Sort key
#      ProvisionedThroughput:
#        ReadCapacityUnits: 1
#        WriteCapacityUnits: 1
      BillingMode: PAY_PER_REQUEST  # On-demand mode

  ProcessReceiptsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: receipts/
      Handler: process_receipts.lambda_handler
      Runtime: python3.12
      Architectures:
        - arm64
      Events:
        ProcessReceipts:
          Type: S3
          Properties:
            Bucket: !Ref ReceiptsBucket
            Events: s3:ObjectCreated:Put
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: 'Allow'
              Action:
                - 'textract:AnalyzeDocument'
                - 'textract:DetectDocumentText'
                - 'bedrock:InvokeModel'
              Resource: '*'
            - Effect: 'Allow'
              Action:
                - "s3:ReadObject"
                - "s3:GetObject"
                - "s3:ListBucket"
                - "s3:GetObjectVersion"
                - "s3:GetBucketLocation"
              Resource: !Sub 'arn:aws:s3:::*/*'
            - Effect: 'Allow'
              Action:
                - "dynamodb:PutItem"
              Resource: !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${ReceiptsTable}'
      Environment:
        Variables:
          TABLE_NAME: !Ref ReceiptsTable

  FetchReceiptsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: receipts/
      Handler: fetch_receipts.lambda_handler
      Runtime: python3.12
      Architectures:
        - arm64
      Events:
        ReceiptsApi:
          Type: Api
          Properties:
            Path: /receipts
            Method: get
            RestApiId: !Ref ReceiptsApiGateway
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: 'Allow'
              Action:
                - "dynamodb:Query"
                - "dynamodb:Scan"
              Resource: !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${ReceiptsTable}'
      Environment:
        Variables:
          TABLE_NAME: !Ref ReceiptsTable

  UploadReceiptFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: receipts/
      Handler: upload_receipt.lambda_handler
      Runtime: python3.12
      Architectures:
        - arm64
      Events:
        UploadReceipts:
          Type: Api
          Properties:
            Path: /receipts
            Method: post
            RestApiId: !Ref ReceiptsApiGateway
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: 'Allow'
              Action:
                - "s3:PutObject"
                - "s3:PutObjectAcl"
              Resource: !Sub 'arn:aws:s3:::${ReceiptsBucket}/*'
      Environment:
        Variables:
          BUCKET_NAME: !Ref ReceiptsBucket

  ReceiptsApiGateway:
      Type: 'AWS::Serverless::Api'
      Properties:
        Name: ReceiptsApiGateway
        StageName: default
        Cors:
          AllowMethods: "'OPTIONS,POST,GET'"
          AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
          AllowOrigin: "'*'"
        BinaryMediaTypes:
          - "multipart/form-data"

  # permissions, roles, etc

  AllowS3ToCallProcessReceiptsPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref ProcessReceiptsFunction
      Principal: s3.amazonaws.com
      SourceArn: !GetAtt ReceiptsBucket.Arn

